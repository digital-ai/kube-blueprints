K8sSetup: Openshift
UseCustomNamespace: false
Namespace: digitalai
ServerType: dai-release
ImageRegistryType: default
IsCustomImageRegistry: false
CustomImageRegistryName: docker.io
CustomPrivateImageRegistrySecret: 
RepositoryNameRelease: xebialabsunsupported
ImageTagRelease: 24.1.12
OperatorImageTagRelease: 24.1.0-24.1.x-maintenance
ImageNameRelease: xl-release
OperatorImageRelease: release-operator
XlrReplicaCount: 1
PostgresqlExternalConfigRelease: |-
  main:
    url: jdbc:postgresql://<xlr-db-host>:5432/<xlr-database-name>
    username: <xlr-username>
    password: |-
      <xlr-password>
    maxPoolSize: 10
  report:
    url: jdbc:postgresql://<xlr-report-db-host>:5432/<xlr-report-database-name>
    username: <xlr-report-username>
    password: |-
      <xlr-report-password>
    maxPoolSize: 10
RabbitmqExternalConfigRelease: |-
  url: <queue-url>
  queueName: <queue-name>
  username: <username>
  password: |-
    <password>
OidcConfigTypeInstall: 'no-oidc'
OidcConfigTypeUpgrade: 'existing'
ExternalOidcConfGenericDeploy: |-
  accessTokenUri: ""
  clientId: ""
  clientSecret: ""
  emailClaim: ""
  issuer: ""
  keyRetrievalUri: ""
  logoutUri: ""
  postLogoutRedirectUri: ""
  redirectUri: ""
  rolesClaimName: ""
  userAuthorizationUri: ""
  userNameClaimName: ""
  fullNameClaim: ""
  scopes: '["openid"]'
ExternalOidcConfGenericRelease: |-
  accessTokenUri: ""
  clientId: ""
  clientSecret: ""
  emailClaim: ""
  fullNameClaim: ""
  issuer: ""
  keyRetrievalUri: ""
  logoutUri: ""
  postLogoutRedirectUri: ""
  redirectUri: ""
  rolesClaim: ""
  userAuthorizationUri: ""
  userNameClaim: ""
  scopes: '["openid"]'
IdentityServiceConfDeploy: |-
  clientId: ""
  clientSecret: ""
  issuer: ""
  redirectUri: ""
  postLogoutRedirectUri: ""
  rolesClaimName: ""
  userNameClaimName: "preferred_username"
  scopes: ["openid"]
IdentityServiceConfRelease: |-
  clientId: ""
  clientSecret: ""
  issuer: ""
  redirectUri: ""
  postLogoutRedirectUri: ""
  rolesClaim: ""
  userNameClaim: "preferred_username"
  scopes: ["openid"]
IngressTypeGeneric: 'haproxy'
IngressTypeOpenshift: 'route'
ExternalIngressClass: ''
HttpProtocolIngress: 'http'
IngressKeystoreSourceGeneric: 'generate'
IngressKeystoreSourceOpenshift: 'default'
IngressTlsSecretName: ''
AdminPassword: 'PRsOjDntJbK2RcoU'
StorageClass: 'gp3-csi'
IngressHost: 'digitalai.release.local'
HttpsProtocol: 'false'
EnablePostgresql: true
PostgresqlStorageClass: 'gp3-csi'
EnableRabbitmq: true
RabbitmqReplicaCount: '1'
RabbitmqStorageClass: 'gp3-csi'
LicenseSource: 'generate'
LicenseEditor:  |-
  
LicenseFile: ''
RepositoryKeystoreSource: 'generate'
RepositoryKeystoreEditor: |-
  
RepositoryKeystoreFile: ''
KeystorePassphrase: 'R2IivyuDnj9H2amY'
ResourcesSource: 'none'
PostgresqlPvcSize: '1'
RabbitmqPvcSize: '1'
PvcSizeRelease: '1'
AccessModeRelease: 'ReadWriteOnce'
HttpProtocolRelease: 'http'
HttpProtocolDeploy: 'http'
ApplicationKeystoreSource: 'generate'
ApplicationKeystoreEditor: |-
  
ApplicationKeystoreFile: ''
ApplicationKeystoreSecretName: ''
ApplicationKeystore: ''
ApplicationKeystoreType: 'pkcs12'
ApplicationKeystorePassword: 'TrJVbVoSaOyQrPiZ'
CrdName: ''
IsCrdReused: false
CrName: ''
ImageNameReleaseRunner: 'release-runner'
ImageTagReleaseRunner: 24.1.12
RemoteRunnerInstallType: 'no-install'
RepositoryNameReleaseRunner: 'xebialabsunsupported'
RemoteRunnerReleaseName: 'release-runner'
RemoteRunnerUseDefaultLocation: true
RemoteRunnerHelmChartUrl: ''
RemoteRunnerReleaseUrl: 'http://dai-ocp-xlr-digitalai-release.digitalai'
RemoteRunnerToken: ''
RemoteRunnerUserEmail: 'release-runner@no.reply'
RemoteRunnerUserPassword: 'faxnhcr9qyOIEJNO'
RemoteRunnerTokenExpiration: '0'
RemoteRunnerCount: 1
IsRemoteRunnerTruststoreEnabled: false
RemoteRunnerTruststore: |- 
  
RemoteRunnerTruststorePassword:
